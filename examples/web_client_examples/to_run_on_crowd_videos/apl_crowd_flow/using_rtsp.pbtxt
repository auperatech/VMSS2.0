control_port: 51881
input_stream: "inStream1"
output_stream: "outStream1"

node {
  name: "demux"
  calculator: "stream_demux"
  input_stream: "inStream1"
  output_stream: "packetstream1"
  side_node_name: "decode"
  side_node_name: "crowd_flow"
  node_options: {
    [type.googleapis.com/gvis.StreamMuxOptions]: {
      demux: {
        rtsp_transport: "tcp"  
        iframe_extract: false
        auto_reconnect: true
      }
    }
  }
}

node {
  name: "decode"
  calculator: "x86_dec"
  input_stream: "packetstream1"
  output_stream: "imgStream1080p"
  side_node_name: "demux"
  node_options: {
    [type.googleapis.com/gvis.VideoCodecOptions]: {
      dec: {
        name: "x86_dec_h2645"  
        ow: 1920
        oh: 1080
        opixfmt: "BGR24"
        queue_size: 12
        low_latency: false
      }
    }
  }
}

node {
  name: "detector"
  calculator: "box_detector"
  input_stream: "imgStream1080p"
  output_stream: "detectionsStream"
  output_stream: "imgStream1080p_detOut"
  side_node_name: "tracker"
  side_node_name: "crowd_flow"
  stream_sync_mode: 1
  stream_sync_maxwait_ms: 60
  ml_model_kernel_name: "RESNET18SSD_ITER90000_PRIVATE_FINAL501IMAGES_ADDED_07JUNE2021_CROWD_FLOW_PERSON_HEAD"
  node_options: {
    [type.googleapis.com/gvis.BoxDetectorOptions]: {
      detect_interval: 5
      detector_type: "SSD"
      need_preprocess: true
      log_performance: false
      run_on_letterboxed_img: false
      detection_threads: 1
      batch_size: 1
      force_batch_size: false
      batch_collection_timeout_ms: 0
      return_frames_inorder: true
      ignore_black_frames: false
      max_detection_lib_q_size: 30
      label_confidence: {
        label: 2
        confidence: 0.5
      }
      #inter_class_nms: {
      #  labels: 2
      #  threshold: 0.5
      #}
    }
  }
}

node {
  name: "tracker"
  calculator: "box_tracker"
  input_stream: "detectionsStream"
  input_stream: "imgStream1080p_detOut"
  output_stream: "tracksStream"
  output_stream:  "imgStream1080p_TrackOut"
  side_node_name: "detector"
  stream_sync_mode: 1
  stream_sync_maxwait_ms: 60
  node_options: {
    [type.googleapis.com/gvis.BoxTrackerOptions]: {
      speed_buffer_max_size: 5
      max_keep_alive: 5
      min_hits: 1
      keep_tracker_iou_thresh: 0.9
      bind_obj_iou_thresh: 0.6
      affinity_threshold: 0.008  
      shape_weight: 1
      position_weight: 1
      appearnace_weight: 1
      shape_dist_max: 1
      position_dist_max: 1
      use_exp_cost: true
      tracker_type: "SORT++"
      min_object_area_th: 200
    }
  }
}
node {
  name: "crowd_flow"
  calculator: "apl_crowd_flow"
  input_stream: "tracksStream"
  input_stream: "imgStream1080p_TrackOut"
  output_stream: "imgStream1080p_aplOut"
  side_node_name: "demux"
  side_node_name: "detector"
  stream_sync_mode: 1
  stream_sync_maxwait_ms: 60
  node_options: {
    [type.googleapis.com/gvis.AplCrowdFlowOptions]: {
      update_interval_seconds: 30
      initial_entering_count: 0
      initial_exiting_count: 0
      max_allowed_borders: 10
      
      common_fields: {
        max_file_cache: 100
        max_cluster_size: 100
        debug: true
        draw: true
        
        border: {
          p1: {
            x: 0
            y: 900
            
          }
          p2: {
            x: 1920
            y: 900
          }
          threshold: 0.055
        }
      }
    }
  }
}

node {
  name: "vfilter_node"
  calculator: "ff_vfilter"
  input_stream: "imgStream1080p_aplOut"
  output_stream: "imgStream720p_ffOut"
  node_options: {
    [type.googleapis.com/gvis.VideoFilterOptions]: {
      roi_x: 0
      roi_y: 0
      roi_w: 0
      roi_h: 0
      opixfmt: "I420"
      ow: 1280
      oh: 720
      ofps: 20
    }
  }
  side_node_name: "encode_node"
}

node {
  name: "encode_node"
  calculator: "x86_enc"
  input_stream: "imgStream720p_ffOut"
  output_stream: "packetStream2"
  node_options: {
    [type.googleapis.com/gvis.VideoCodecOptions]: {
     enc: {
       name: "x86_enc_h264"
       w: 0 
       h: 0
       fps: 0
     }
    }
  }
  side_node_name: "vfilter_node"
  side_node_name: "mux_node"
}

node {
  name: "mux_node"
  calculator: "stream_mux"
  input_stream: "packetStream2"
  output_stream: "outStream1"
  node_options: {
    [type.googleapis.com/gvis.StreamMuxOptions]: {
     mux: {
       rtsp_transport: "tcp"
       auto_reconnect: true
     }
    }
  }
  side_node_name: "encode_node"
}

