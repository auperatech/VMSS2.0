# The recommended video for this pipeline is car.

control_port: 51881
graph_input: "graph_input1"
graph_output: "graph_output1"


node {
  name: "demux_node"
  calculator: "stream_demux"
  vendor: "Aupera"
  graph_input: "graph_input1"
  output_stream: "packet_stream_demux"
  output_stream: "video_stream_info_demux"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
      demux: {
        rtsp_transport: "tcp"  
        iframe_extract: false
        auto_reconnect: true
      }
    }
  }
}


node {
  name: "decode_node"
  calculator: "x86_dec"
  vendor: "Aupera"
  input_stream: "packet_stream_demux"
  input_stream: "video_stream_info_demux"
  output_stream: "image_stream_decode"
  output_stream: "video_stream_info_decode"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
      dec: {
        ow: 1920
        oh: 1080
        opixfmt: PIXFMT_BGR24
        queue_size: 12
        low_latency: false
      }
    }
  }
}


node {
  name: "segmentor"
  calculator: "box_segmentor"
  input_stream: "image_stream_decode"
  output_stream: "segmentation_stream"
  ml_model_kernel_name: "fpn"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxSegmentorOptions]: {
      segmentor_type: "Segmentation2D"
      need_preprocess: true
      log_performance: false
      log_info: false
      run_on_letterboxed_img: false
      batch_size: 8
      force_batch_size: false
      return_frames_inorder: true
      segmentation_threads: 1
      batch_collection_timeout_ms: 0
      ignore_black_frames: false
      max_segmentation_lib_q_size: 30
      resizing: true
      interpolation_flag: 0
    }
  }
}


node {
  name: "visualizer"
  calculator: "box_visualizer"
  input_stream: "segmentation_stream"
  input_stream: "image_stream_decode"
  output_stream: "image_stream_viz"
  stream_sync: {
    drop_strategy: DROP_INCOMPLETE_PACKETS
    timeout_ms: 5000
  }
  node_options: {
    [type.googleapis.com/aup.avaf.BoxVisualizerOptions]: {
      input_type: INPUT_TYPE_SEGMENTATION
      overlay_opacity: 0.5
    }
  }
}


node {
  name: "vfilter_node"
  calculator: "ff_vfilter"
  vendor: "Aupera"
  input_stream: "image_stream_viz"
  input_stream: "video_stream_info_decode"
  output_stream: "image_stream_vfilter"
  output_stream: "video_stream_info_vfilter"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoFilterOptions]: {
      roi_x: 0
      roi_y: 0
      roi_w: 0
      roi_h: 0
      opixfmt: PIXFMT_I420
      ow: 1280
      oh: 720
      ofps: 20
    }
  }
}


node {
  name: "encode_node"
  calculator: "x86_enc"
  vendor: "Aupera"
  input_stream: "image_stream_vfilter"
  input_stream: "video_stream_info_vfilter"
  output_stream: "packet_stream_encode"
  output_stream: "codec_context_stream"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
     enc: {
       type: MPEG4
       w: 0 
       h: 0
       fps: 0
     }
    }
  }
}


node {
  name: "mux_node"
  calculator: "stream_mux"
  vendor: "Aupera"
  input_stream: "packet_stream_encode"
  input_stream: "codec_context_stream"
  graph_output: "graph_output1"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
     mux: {
       rtsp_transport: "tcp"
       auto_reconnect: true
     }
    }
  }
}