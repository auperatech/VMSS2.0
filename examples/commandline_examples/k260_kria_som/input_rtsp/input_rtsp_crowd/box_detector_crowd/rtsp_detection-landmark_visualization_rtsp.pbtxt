# The recommended video for this pipeline is crowd.

control_port: 51881
graph_input: "graph_input1"
graph_output: "graph_output1"

node {
  name: "demux_node"
  calculator: "stream_demux"
  vendor: "Aupera"
  graph_input: "graph_input1"
  output_stream: "packet_stream_demux"
  output_stream: "video_stream_info_demux"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
      demux: {
        rtsp_transport: "tcp"  
        iframe_extract: false
        auto_reconnect: true
      }
    }
  }
}


node {
  name: "decode_node"
  calculator: "x86_dec"
  vendor: "Aupera"
  input_stream: "packet_stream_demux"
  input_stream: "video_stream_info_demux"
  output_stream: "image_stream_decode"
  output_stream: "video_stream_info_decode"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
      dec: {
        ow: 1920
        oh: 1080
        opixfmt: PIXFMT_BGR24
        queue_size: 12
        low_latency: false
      }
    }
  }
}


node {
  name: "detector"
  calculator: "box_detector"
  input_stream: "image_stream_decode"
  output_stream: "detections_stream"
  output_stream: "detect_interval"
  ml_model_kernel_name: "ssd_pedestrian_pruned_0_97"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxDetectorOptions]: {
      detect_interval: 1
      detector_type: "SSD"
      need_preprocess: true
      log_performance: false
      run_on_letterboxed_img: false
      batch_size: 1
      return_frames_inorder: true 
      batch_collection_timeout_ms: 0
      ignore_black_frames: false
      max_detection_lib_q_size: 30
      mean: {
        r: 104.0
        g: 117.0
        b: 123.0
      }
      scale: {
        ch1: 1.0
        ch2: 1.0
        ch3: 1.0
      }
      label_confidence: {
        label: 0
        confidence: 0.0
      }
      label_confidence: {
        label: 1
        confidence: 0.55
      }
    }
  }
}

node {
  name: "landmark"
  calculator: "landmark_predictor"
  input_stream: "detections_stream"
  input_stream: "image_stream_decode"
  output_stream: "landmark_stream"
  stream_sync: {
    drop_strategy: DROP_INCOMPLETE_PACKETS
    timeout_ms: 5000
  }
  ml_model_kernel_name: "movenet_ntd_pt"
  node_options: {
    [type.googleapis.com/aup.avaf.LandmarkPredictorOptions]: {
        landmark_predictor_type: "Movenet"
        use_detections: true
        need_preprocess: true
        log_performance: true
        run_on_letterboxed_img: false
        batch_size: 3
        force_batch_size: false
        return_frames_inorder: true
        landmark_prediction_threads: 2
        batch_collection_timeout_ms: 0
        max_landmark_prediction_lib_q_size: 30
    }
  }
}

node {
  name: "visualizer1"
  calculator: "box_visualizer"
  input_stream: "landmark_stream"
  input_stream: "image_stream_decode"
  output_stream: "visimgOut1"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxVisualizerOptions] {
      input_type: INPUT_TYPE_LANDMARK
      connect_landmarks: true
      arm_raise_check: "" 
      apply_filter_on_landmarks: "hat"
    }
  }
}

node {
  name: "vfilter_node1"
  calculator: "ff_vfilter"
  input_stream: "visimgOut1"
  input_stream: "video_stream_info_decode" 
  output_stream: "imgStream720p_ffOut1"
  output_stream: "vid_stream_info_side_packet_ff1"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoFilterOptions]: {
      roi_x: 0
      roi_y: 0
      roi_w: 0
      roi_h: 0
      opixfmt: PIXFMT_I420
      ow: 960
      oh: 540
      ofps: 12
    }
  }
}

node {
  name: "encode_node1"
  calculator: "x86_enc"
  input_stream: "imgStream720p_ffOut1"
  input_stream: "vid_stream_info_side_packet_ff1"
  output_stream: "packetStream21"
  output_stream: "code_context_side_packet1"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
     enc: {
       type: H264
       fps: 12
       bitrate: 100
     }
    }
  }
}

node {
  name: "mux_node1"
  calculator: "stream_mux"
  input_stream: "packetStream21"
  input_stream: "code_context_side_packet1"
  graph_output: "graph_output1"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
     mux: {
       rtsp_transport: "tcp"
       auto_reconnect: true
     }
    }
  }
}
