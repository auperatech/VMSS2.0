control_port: 51881
graph_input: "inStream1"
graph_output: "outStream1"

node {
  name: "img_stream"
  calculator: "image_stream"
  graph_input: "inStream1"
  output_stream: "imgStream1080p"
  output_stream: "decode_vid_info_side_packet"
  output_stream_attributes: {
    name: "imgStream1080p"
    capacity: 128
  }
  node_options: {
    [type.googleapis.com/aup.avaf.ImageStreamOptions]: {
      playback_fps: 10000
      # directory: "/home/mehdiz/Videos/Chinese_Car_video_low_quality_frames/"
      directory: "/home/mehdiz/Videos/Chinese_Car_video_low_quality_frames_scaled/"
      # directory: "/tmp/Chinese_Car_video_low_quality_frames/"
      # directory: "/home/mehdiz/corst2/SharedFiles/videos/Chinese_Car_video_jpg_low_quality"
      # width: 1920
      # height: 1080
      width: 416
      height: 416
      loop_over: true
      pool_size: 128
      preload_images: true
    }
  }
}

node {
  name: "detector"
  calculator: "box_detector"
  input_stream: "imgStream1080p"
  output_stream: "detectionsStream"
  output_stream: "detect_interval_side_packet_dangling"
  ml_model_kernel_name: "refinedet_baseline"
  # ml_model_kernel_name: "ssd_traffic_pruned_0_9"
  # ml_model_kernel_name: "yolov3_voc"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxDetectorOptions]: {
      detect_interval: 1
      detector_type: "RefineDet"
      # detector_type: "SSD"
      # detector_type: "YoloV3"
      need_preprocess: true
      log_performance: true
      run_on_letterboxed_img: false
      batch_size: 8
      return_frames_inorder: true 
      batch_collection_timeout_ms: 0
      ignore_black_frames: false
      max_detection_lib_q_size: 500
      mean: {
        r: 125.319099
        g: 123.484794
        b: 120.935805
      }
      scale: {
        ch1: 1
        ch2: 1
        ch3: 1
      }
      total_classes: 2
      detection_threads: 4
    }
  }
}

node {
  name: "visualizer"
  calculator: "box_visualizer"
  input_stream: "detectionsStream"
  input_stream: "imgStream1080p"
  output_stream: "imgStream1080p_fromVisualizer"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxVisualizerOptions]: {
      text_color: {
        r: 255
        g: 0
        b: 0
      }
      box_color: {
        r: 255
        g: 0
        b: 0
      }
      class_color: {
        label: 1
        color: {
          r: 0
          g: 0
          b: 0
        }
      }
      class_color: {
        label: 2
        color: {
          r: 0
          g: 255
          b: 0
        }
      }
      text_offset: {
        x: 0
        y: 0
      }
      font: 1
      line_type: 0
      box_thickness: 5
      text_size: 2
    }
  }
}

########################################################################################
node {
  name: "vfilter_node1"
  calculator: "ff_vfilter"
  input_stream: "imgStream1080p_fromVisualizer"
  input_stream: "decode_vid_info_side_packet"
  output_stream: "imgStream720p_ffOut"
  output_stream: "video_stream_info_vfilter_node_side_packet"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoFilterOptions]: {
      roi_x: 0
      roi_y: 0
      roi_w: 0
      roi_h: 0
      opixfmt: PIXFMT_I420
      ow: 1280
      oh: 720
      ofps: 20
    }
  }
}

node {
  name: "encode_node1"
  calculator: "x86_enc"
  input_stream: "imgStream720p_ffOut"
  input_stream: "video_stream_info_vfilter_node_side_packet"
  output_stream: "packetStream_fromDecoder"
  output_stream: "codec_context_side_packet"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
     enc: {
       type: H264
       w: 0 
       h: 0
       fps: 0
     }
    }
  }
}

node {
  name: "mux_node1"
  calculator: "stream_mux"
  input_stream: "packetStream_fromDecoder"
  input_stream: "codec_context_side_packet"
  graph_output: "outStream1"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
     mux: {
       rtsp_transport: "tcp"
       auto_reconnect: true
     }
    }
  }
}


statistics_collector: {
  target_file: "/tmp/stats"
  latency_stream_start: "imgStream1080p"
  latency_stream_end: "imgStream1080p_fromVisualizer"
  throughput_stream_name: "detectionsStream"
  throughput_ignore_initial_packets_count: 1000
  size_stream_name: "imgStream1080p"
}
