control_port: 51881
graph_input: "inStream1"

node {
  name: "demux_node"
  calculator: "stream_demux"
  graph_input: "inStream1"
  output_stream: "packetstream1"
  output_stream: "video_info_side_packet_demux"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
      demux: {
        rtsp_transport: "tcp"  
        iframe_extract: false
        auto_reconnect: true
      }
    }
  }
}

node {
  name: "decode_node"
  calculator: "x86_dec"
  input_stream: "packetstream1"
  input_stream: "video_info_side_packet_demux"
  output_stream: "imgStream1080p"
  output_stream: "decode_vid_info_side_packet"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
      dec: {
        name: "x86_dec_h2645"  
        ow: 1920
        oh: 1080
        opixfmt: PIXFMT_BGR24
        queue_size: 12
        low_latency: false
      }
    }
  }
}

node {
  name: "detector"
  calculator: "box_detector"
  input_stream: "imgStream1080p"
  output_stream: "detectionsStream"
  output_stream: "detect_interval_side_packet_dangling"
  ml_model_kernel_name: "ssd_traffic_pruned_0_9"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxDetectorOptions]: {
      detect_interval: 1
      detector_type: "SSD"
      need_preprocess: true
      log_performance: false
      run_on_letterboxed_img: false
      batch_size: 1
      return_frames_inorder: true
      batch_collection_timeout_ms: 0
      ignore_black_frames: false
      max_detection_lib_q_size: 30
      mean: {
        r: 123.0
        g: 117.0
        b: 104.0
      }
      scale: {
        ch1: 1
        ch2: 1
        ch3: 1
      }
      label_confidence: {
        label: 0
        confidence: 0.5
      }
      label_confidence: {
        label: 1
        confidence: 0.5
      }
      label_confidence: {
        label: 2
        confidence: 0.5
      }
      label_confidence: {
        label: 3
        confidence: 0.5
      }
    }
  }
}

node {
  name: "plate"
  calculator: "plate_recognizer"
  input_stream: "detectionsStream"
  input_stream: "imgStream1080p"
  node_options: {
    [type.googleapis.com/aup.avaf.PlateRecognizerOptions]: {
      plate_confidence: 0.1
      plate_area_threshold: 50 
      detector_type: "xilinx"
      recog_type: "xilinx"
      run_checksum_valid: false
      run_preprocessing: false
    }
  }
}