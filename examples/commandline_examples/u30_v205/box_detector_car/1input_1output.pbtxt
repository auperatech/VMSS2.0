control_port: 51881
graph_input: "graph_input1"
graph_output: "graph_output1"

node {
  name: "demux_node"
  calculator: "stream_demux"
  graph_input: "graph_input1"
  output_stream: "packetstream1"
  output_stream: "video_info_side_packet_demux"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
      demux: {
        rtsp_transport: "tcp"  
        iframe_extract: false
        auto_reconnect: true
      }
    }
  }
}

node {
  name: "decode_node"
  calculator: "v205_dec"
  input_stream: "packetstream1"
  input_stream: "video_info_side_packet_demux"
  output_stream: "imgStream1080p"
  output_stream: "video_stream_info_decode"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
      dec: {
        name: "v205_dec_h2645"
        ow: 1920
        oh: 1080
        opixfmt: PIXFMT_BGR24
        queue_size: 12
        low_latency: false
      }
    }
  }
}

node {
  name: "detector"
  calculator: "box_detector"
  input_stream: "imgStream1080p"
  output_stream: "detectionsStream"
  output_stream: "detect_interval_side_packet_dangling"
  ml_model_kernel_name: "cf_ssdtraffic_360_480_0.9_11.6G_2.0"      
  node_options: {
    [type.googleapis.com/aup.avaf.BoxDetectorOptions]: {
      detect_interval: 1
      detector_type: "SSD"
      need_preprocess: true
      log_performance: false
      run_on_letterboxed_img: false
      batch_size: 1
      return_frames_inorder: true 
      batch_collection_timeout_ms: 0
      ignore_black_frames: false
      max_detection_lib_q_size: 30
      label_confidence: {
        label: 0
        confidence: 0.5
      }
      label_confidence: {
        label: 1
        confidence: 0.5
      }
      label_confidence: {
        label: 2
        confidence: 0.5
      }
      label_confidence: {
        label: 3
        confidence: 0.5
      }
      label_confidence: {
        label: 4
        confidence: 0.5
      }
      label_confidence: {
        label: 5
        confidence: 0.5
      }
      label_confidence: {
        label: 6
        confidence: 0.5
      }
      label_confidence: {
        label: 7
        confidence: 0.5
      }
      label_confidence: {
        label: 8
        confidence: 0.5
      }
      label_confidence: {
        label: 9
        confidence: 0.1
      }
    }
  }
}

node {
  name: "visualizer"
  calculator: "box_visualizer"
  input_stream: "detectionsStream"
  input_stream: "imgStream1080p"
  output_stream: "img_stream_viz"
  stream_sync: {
    drop_strategy: DROP_INCOMPLETE_PACKETS
    timeout_ms: 5000
  }
  node_options: {
    [type.googleapis.com/aup.avaf.BoxVisualizerOptions]: {
      retail_demo: false
      #label_name_file: "/usr/share/vitis_ai_library/models/retail_resnet50_vitis2.0_VCK50008PE/retail_resnet50_vitis2.0_VCK50008PE.labels"
      text_color: {
        r: 255
        g: 0
        b: 0
      }
      box_color: {
        r: 255
        g: 0
        b: 0
      }
      class_color: {
        label: 1
        color: {
          r: 0
          g: 0
          b: 0
        }
      }
      class_color: {
        label: 2
        color: {
          r: 0
          g: 255
          b: 0
        }
      }
      text_offset: {
        x: 0
        y: 0
      }
      font: 0 
      line_type: 0
      box_thickness: 5
      text_size:5 
    }
  }
}

node {
  name: "vfilter_node"
  calculator: "ff_vfilter"
  vendor: "Aupera"
  input_stream: "img_stream_viz"
  input_stream: "video_stream_info_decode"
  output_stream: "image_stream_vfilter_node"
  output_stream: "video_stream_info_vfilter_node"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoFilterOptions]: {
      roi_x: 0
      roi_y: 0
      roi_w: 0
      roi_h: 0
      opixfmt: PIXFMT_I420
      ow: 1280
      oh: 720
      ofps: 20
    }
  }
}

node {
  name: "encode_node"
  calculator: "x86_enc"
  vendor: "Aupera"
  input_stream: "image_stream_vfilter_node"
  input_stream: "video_stream_info_vfilter_node"
  output_stream: "packet_stream_encode_node"
  output_stream: "codec_context_stream"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
      enc: {
        type: MPEG4
        w: 0
        h: 0
        #  fps: 20
      }
    }
  }
}

node {
  name: "mux_node"
  calculator: "stream_mux"
  vendor: "Aupera"
  graph_output: "graph_output1"
  input_stream: "packet_stream_encode_node"
  input_stream: "codec_context_stream"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
     mux: {
       rtsp_transport: "tcp"
       auto_reconnect: true
     }
    }
  }
}
